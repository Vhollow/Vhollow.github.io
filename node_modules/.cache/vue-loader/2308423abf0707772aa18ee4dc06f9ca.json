{"remainingRequest":"C:\\Users\\vicen\\OneDrive\\Documentos\\GitHub\\Vhollow.github.io\\mdbvue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\vicen\\OneDrive\\Documentos\\GitHub\\Vhollow.github.io\\mdbvue\\demo\\docs\\Components\\PanelPage.vue?vue&type=template&id=2f3435a0&scoped=true&","dependencies":[{"path":"C:\\Users\\vicen\\OneDrive\\Documentos\\GitHub\\Vhollow.github.io\\mdbvue\\demo\\docs\\Components\\PanelPage.vue","mtime":1626860678000},{"path":"C:\\Users\\vicen\\OneDrive\\Documentos\\GitHub\\Vhollow.github.io\\mdbvue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\vicen\\OneDrive\\Documentos\\GitHub\\Vhollow.github.io\\mdbvue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\vicen\\OneDrive\\Documentos\\GitHub\\Vhollow.github.io\\mdbvue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\vicen\\OneDrive\\Documentos\\GitHub\\Vhollow.github.io\\mdbvue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}