{"remainingRequest":"C:\\Users\\vicen\\OneDrive\\Documentos\\GitHub\\Vhollow.github.io\\mdbvue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\vicen\\OneDrive\\Documentos\\GitHub\\Vhollow.github.io\\mdbvue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\vicen\\OneDrive\\Documentos\\GitHub\\Vhollow.github.io\\mdbvue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\vicen\\OneDrive\\Documentos\\GitHub\\Vhollow.github.io\\mdbvue\\demo\\docs\\CSS\\GradientPage.vue?vue&type=template&id=3ccb693e&scoped=true&","dependencies":[{"path":"C:\\Users\\vicen\\OneDrive\\Documentos\\GitHub\\Vhollow.github.io\\mdbvue\\demo\\docs\\CSS\\GradientPage.vue","mtime":1632149272926},{"path":"C:\\Users\\vicen\\OneDrive\\Documentos\\GitHub\\Vhollow.github.io\\mdbvue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\vicen\\OneDrive\\Documentos\\GitHub\\Vhollow.github.io\\mdbvue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\vicen\\OneDrive\\Documentos\\GitHub\\Vhollow.github.io\\mdbvue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\vicen\\OneDrive\\Documentos\\GitHub\\Vhollow.github.io\\mdbvue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}