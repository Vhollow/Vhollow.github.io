{"remainingRequest":"C:\\Users\\vicen\\OneDrive\\Documentos\\GitHub\\Vhollow.github.io\\mdbvue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\vicen\\OneDrive\\Documentos\\GitHub\\Vhollow.github.io\\mdbvue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\vicen\\OneDrive\\Documentos\\GitHub\\Vhollow.github.io\\mdbvue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\vicen\\OneDrive\\Documentos\\GitHub\\Vhollow.github.io\\mdbvue\\demo\\docs\\Tables\\DataTableJSONPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\vicen\\OneDrive\\Documentos\\GitHub\\Vhollow.github.io\\mdbvue\\demo\\docs\\Tables\\DataTableJSONPage.vue","mtime":1632149272943},{"path":"C:\\Users\\vicen\\OneDrive\\Documentos\\GitHub\\Vhollow.github.io\\mdbvue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\vicen\\OneDrive\\Documentos\\GitHub\\Vhollow.github.io\\mdbvue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\vicen\\OneDrive\\Documentos\\GitHub\\Vhollow.github.io\\mdbvue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\vicen\\OneDrive\\Documentos\\GitHub\\Vhollow.github.io\\mdbvue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBtZGJEYXRhdGFibGUsIG1kYkNvbnRhaW5lciwgbWRiUm93LCBtZGJJY29uIH0gZnJvbSAnbWRidnVlJzsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIG1kYkRhdGF0YWJsZTogbWRiRGF0YXRhYmxlLAogICAgbWRiQ29udGFpbmVyOiBtZGJDb250YWluZXIsCiAgICBtZGJSb3c6IG1kYlJvdywKICAgIG1kYkljb246IG1kYkljb24KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjb2x1bW5zOiBbXSwKICAgICAgcm93czogW10KICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBjb2x1bW5zOiB0aGlzLmNvbHVtbnMsCiAgICAgICAgcm93czogdGhpcy5yb3dzCiAgICAgIH07CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBmaWx0ZXJEYXRhOiBmdW5jdGlvbiBmaWx0ZXJEYXRhKGRhdGFBcnIsIGtleXMpIHsKICAgICAgdmFyIGRhdGEgPSBkYXRhQXJyLm1hcChmdW5jdGlvbiAoZW50cnkpIHsKICAgICAgICB2YXIgZmlsdGVyZWRFbnRyeSA9IHt9OwogICAgICAgIGtleXMuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7CiAgICAgICAgICBpZiAoa2V5IGluIGVudHJ5KSB7CiAgICAgICAgICAgIGZpbHRlcmVkRW50cnlba2V5XSA9IGVudHJ5W2tleV07CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgICAgcmV0dXJuIGZpbHRlcmVkRW50cnk7CiAgICAgIH0pOwogICAgICByZXR1cm4gZGF0YTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIGZldGNoKCdodHRwczovL2pzb25wbGFjZWhvbGRlci50eXBpY29kZS5jb20vdG9kb3MnKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgcmV0dXJuIHJlcy5qc29uKCk7CiAgICB9KS50aGVuKGZ1bmN0aW9uIChqc29uKSB7CiAgICAgIHZhciBrZXlzID0gWyJpZCIsICJ0aXRsZSIsICJjb21wbGV0ZWQiXTsKCiAgICAgIHZhciBlbnRyaWVzID0gX3RoaXMuZmlsdGVyRGF0YShqc29uLCBrZXlzKTsgLy9jb2x1bW5zCgoKICAgICAgX3RoaXMuY29sdW1ucyA9IGtleXMubWFwKGZ1bmN0aW9uIChrZXkpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgbGFiZWw6IGtleS50b1VwcGVyQ2FzZSgpLAogICAgICAgICAgZmllbGQ6IGtleSwKICAgICAgICAgIHNvcnQ6ICdhc2MnCiAgICAgICAgfTsKICAgICAgfSk7IC8vcm93cwoKICAgICAgZW50cmllcy5tYXAoZnVuY3Rpb24gKGVudHJ5KSB7CiAgICAgICAgcmV0dXJuIF90aGlzLnJvd3MucHVzaChlbnRyeSk7CiAgICAgIH0pOwogICAgfSk7CiAgfQp9Ow=="},{"version":3,"sources":["DataTableJSONPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAsBA,SAAA,YAAA,EAAA,YAAA,EAAA,MAAA,EAAA,OAAA,QAAA,QAAA;AACA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,YAAA,EAAA,YADA;AAEA,IAAA,YAAA,EAAA,YAFA;AAGA,IAAA,MAAA,EAAA,MAHA;AAIA,IAAA,OAAA,EAAA;AAJA,GADA;AAOA,EAAA,IAPA,kBAOA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,EADA;AAEA,MAAA,IAAA,EAAA;AAFA,KAAA;AAIA,GAZA;AAaA,EAAA,QAAA,EAAA;AACA,IAAA,IADA,kBACA;AACA,aAAA;AACA,QAAA,OAAA,EAAA,KAAA,OADA;AAEA,QAAA,IAAA,EAAA,KAAA;AAFA,OAAA;AAIA;AANA,GAbA;AAqBA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,sBACA,OADA,EACA,IADA,EACA;AACA,UAAA,IAAA,GAAA,OAAA,CAAA,GAAA,CAAA,UAAA,KAAA,EAAA;AACA,YAAA,aAAA,GAAA,EAAA;AACA,QAAA,IAAA,CAAA,OAAA,CAAA,UAAA,GAAA,EAAA;AACA,cAAA,GAAA,IAAA,KAAA,EAAA;AACA,YAAA,aAAA,CAAA,GAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAA;AACA;AACA,SAJA;AAKA,eAAA,aAAA;AACA,OARA,CAAA;AASA,aAAA,IAAA;AACA;AAZA,GArBA;AAmCA,EAAA,OAnCA,qBAmCA;AAAA;;AACA,IAAA,KAAA,CAAA,4CAAA,CAAA,CACA,IADA,CACA,UAAA,GAAA;AAAA,aAAA,GAAA,CAAA,IAAA,EAAA;AAAA,KADA,EAEA,IAFA,CAEA,UAAA,IAAA,EAAA;AACA,UAAA,IAAA,GAAA,CAAA,IAAA,EAAA,OAAA,EAAA,WAAA,CAAA;;AACA,UAAA,OAAA,GAAA,KAAA,CAAA,UAAA,CAAA,IAAA,EAAA,IAAA,CAAA,CAFA,CAGA;;;AACA,MAAA,KAAA,CAAA,OAAA,GAAA,IAAA,CAAA,GAAA,CAAA,UAAA,GAAA,EAAA;AACA,eAAA;AACA,UAAA,KAAA,EAAA,GAAA,CAAA,WAAA,EADA;AAEA,UAAA,KAAA,EAAA,GAFA;AAGA,UAAA,IAAA,EAAA;AAHA,SAAA;AAKA,OANA,CAAA,CAJA,CAWA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,UAAA,KAAA;AAAA,eAAA,KAAA,CAAA,IAAA,CAAA,IAAA,CAAA,KAAA,CAAA;AAAA,OAAA;AACA,KAfA;AAgBA;AApDA,CAAA","sourcesContent":["<template>\r\n  <mdb-container class=\"mt-5\">\r\n    <mdb-row class=\"mt-5 align-items-center justify-content-start\">\r\n      <h4 class=\"demo-title\"><strong>Datatables</strong></h4>\r\n      <a href=\"https://mdbootstrap.com/docs/vue/tables/datatables/?utm_source=DemoApp&utm_medium=MDBVueFree\" class=\"border grey-text px-2 border-light rounded ml-2\" target=\"_blank\"><mdb-icon icon=\"graduation-cap\" class=\"mr-2\"/>Docs</a>\r\n    </mdb-row>\r\n    <section class=\"demo-section\">\r\n      <h4>Datatable with other JSON data structure</h4>\r\n      <section>\r\n        <mdb-datatable\r\n          :data=\"data\"\r\n          striped\r\n          bordered\r\n          arrows\r\n          :display=\"3\"\r\n        />\r\n      </section>\r\n    </section>\r\n  </mdb-container>\r\n</template>\r\n\r\n<script>\r\n  import { mdbDatatable, mdbContainer, mdbRow, mdbIcon } from 'mdbvue';\r\n  export default {\r\n    components: {\r\n      mdbDatatable,\r\n      mdbContainer, \r\n      mdbRow,\r\n      mdbIcon\r\n    },\r\n    data() {\r\n      return {\r\n        columns: [],\r\n        rows: []\r\n      };\r\n    },\r\n    computed: {\r\n      data() {\r\n        return {\r\n          columns: this.columns,\r\n          rows: this.rows\r\n        };\r\n      },\r\n    },\r\n    methods: {\r\n      filterData(dataArr, keys) {\r\n        let data = dataArr.map(entry => {\r\n          let filteredEntry = {};\r\n          keys.forEach(key => {\r\n            if (key in entry) {\r\n              filteredEntry[key] = entry[key];\r\n            }\r\n          });\r\n          return filteredEntry;\r\n        });\r\n        return data;\r\n      }\r\n    },\r\n    mounted(){\r\n      fetch('https://jsonplaceholder.typicode.com/todos')\r\n        .then(res => res.json())\r\n        .then(json => {\r\n          let keys = [\"id\", \"title\", \"completed\"];\r\n          let entries = this.filterData(json, keys);\r\n          //columns\r\n          this.columns = keys.map(key => {\r\n            return {\r\n              label: key.toUpperCase(),\r\n              field: key,\r\n              sort: 'asc'\r\n            };\r\n          });\r\n          //rows\r\n          entries.map(entry => this.rows.push(entry));\r\n        })\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n</style>\r\n"],"sourceRoot":"demo/docs/Tables"}]}